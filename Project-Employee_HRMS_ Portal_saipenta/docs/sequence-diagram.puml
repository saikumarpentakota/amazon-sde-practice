@startuml HRMS Payroll Generation Sequence
!theme plain
title HRMS - Payroll Generation Process

actor User
participant "PayrollController" as PC
participant "EnhancedPayrollService" as EPS
participant "EmployeeDynamoRepository" as EDR
participant "PayrollBatchService" as PBS
participant "Queue" as Q
participant "DynamoDB" as DB

== Single Payroll Generation ==
User -> PC: POST /api/payroll/generate\n?employeeId=emp1&month=2024-01&overtime=5000
PC -> EPS: generatePayroll(emp1, 2024-01, 5000)
EPS -> EDR: findById(emp1)
EDR -> DB: Query Employee
DB --> EDR: Employee Data
EDR --> EPS: Employee Object
EPS -> EPS: Calculate Salary\n(Basic + Allowances + Overtime - Deductions)
EPS --> PC: Payroll Object
PC --> User: JSON Response\n{payroll: {...}, message: "Success"}

== Batch Payroll Generation ==
User -> PC: POST /api/payroll/generate\n?type=batch&month=2024-01
PC -> PBS: addAllEmployeesToQueue()
PBS -> EDR: findAll()
EDR -> DB: Query All Employees
DB --> EDR: List<Employee>
EDR --> PBS: Employee List
loop For each employee
    PBS -> Q: addToQueue(employeeId)
end
PBS --> PC: Queue populated

PC -> PBS: processBatch(2024-01)
loop While queue not empty
    PBS -> Q: poll()
    Q --> PBS: employeeId
    PBS -> EPS: generatePayroll(employeeId, 2024-01, 0)
    EPS -> EDR: findById(employeeId)
    EDR -> DB: Query Employee
    DB --> EDR: Employee Data
    EDR --> EPS: Employee Object
    EPS -> EPS: Calculate Salary
    EPS --> PBS: Payroll Object
end
PBS --> PC: List<Payroll>
PC --> User: JSON Response\n{payrolls: [...], count: N}

@enduml